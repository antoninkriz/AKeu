{
  "createdAt": "2020-08",
  "title": "Let's Loud",
  "description": "A website for a business with focus on event organization and audio/video production",
  "content": "![logo](/images/posts/letsloud/logo.png)\n\n# Background\n\nFriend of mine started a business with a focus on event organisation, audio and video production and PR for artists and asked me to create a website and a logo. So I did. Let'sLoud was one of my first \"bigger\" projects I've worked on where I've had complete freedom with the design and technologies used. I could've used WordPress but wanted to try something on my own, plus I wouldn't learn anything from it.\nAlthough I'm not a big fan of PHP, I've already had some experience with it (for example my old personal website and some other smaller projects), and the web hosting is pretty cheap, so PHP was an obvious choice.\n\n# Development\n\n## Structure\n\nWhole project can be divided into following parts:\n- **App**\n  - *MVC* - Contains actual business logic (Models, Controllers) and Twig templates (Views) of both the public page and administration\n- **Core**\n  - *Libraries* - Contains main code related to routing, error handling, rendering, administration login, bolierplate code, ...\n- **Data**\n  - *SQL* - Development related data, for example SQL scripts for building the database\n- **www**\n  - *Publicly available files* - JS, LESS and CSS stylesheets, logos, ...\n\n## Front-End\n\nI've decided to divide the website into three parts: single main page, references page and administration. Bootstrap came handy to make things easier.\nI've used [fullPage.js](https://github.com/alvarotrigo/fullPage.js) for the main page to achieve the single-page scrolling impression and [particles.js](https://github.com/VincentGarreau/particles.js/) for the neat \"yellow floating squares\" effect and some CSS animations for the text to fade in smoothly.\nOn the reference page, the content for each artist (group, event) is loaded from the server using AJAX after selecting an artist from the list on the side. Smooth scrolling over the list is possible thanks to the [slick](https://github.com/kenwheeler/slick/) library.\nThe administration is a basic bootstrap-ish login form and an interface to add, delete, sort and edit artists and their videos with help form the [Sortable](https://github.com/SortableJS/Sortable) library.\n\n## Back-End\n\nThe server side is based around [this](https://github.com/daveh/php-mvc) a MVC framework I re-wrote in PHP 7.x and a MySQL database. \n\n# Technologies\n\n## General\n\n- *MySQL* - the database\n\n**[MySQL](https://github.com/mysql)**\nTo make everything sound even cooler my first choice was MongoDB, but since the relational database is a better choice for this project, I stuck to MySQL which I already have more experience with. However, the whole structure of this project takes in mind possible usage of other types of databases.\n\n## Back-End\n\n- *PHP 7* - well, it's PHP\n- *php-mvc* - MVC framework the whole page is built on\n\n**[PHP 7](https://github.com/php/php-src)**\nWell, it's PHP. What else do you want to know!\n**[php-mvc](https://github.com/daveh/php-mvc)**\nMVC was a new thing for me at that time, so I've implemented the framework according to this [Udemy course](https://www.udemy.com/course/php-mvc-from-scratch) and rewrote it with strict typing and PHP 7\n\n## Front-End\n\n- *LESS* - CSS extension language\n- *fullPage.js* - Full screen pages fast and simple\n- *particles.js* - A lightweight JavaScript library for creating particles\n- *slick* - The last carousel you'll ever need\n- *Sortable* - Library for reorderable drag-and-drop lists\n\n**[LESS](https://github.com/less)**\nPure CSS is not fun to work with. Let's use LESS.\n**[fullPage.js](https://github.com/alvarotrigo/fullPage.js)**\nLibrary for the single scrolling page effect.\n**[particles.js](https://github.com/VincentGarreau/particles.js/)**\nLibrary for cool javascript particles animations.\n**[slick](https://github.com/kenwheeler/slick/)**\nLibrary implementing the carousel effect. \n**[Sortable](https://github.com/SortableJS/Sortable)**\nLibrary to make drag-and-drop sortable lists.\n\n# Screenshots\n\n![](/images/posts/letsloud/1.png)\n![](/images/posts/letsloud/2.png)\n![](/images/posts/letsloud/3.png)  \n\n# Installation and requirements\n\n## Rquirements:\n\n- *PHP 7.2*\n- *MySQL server*"
}